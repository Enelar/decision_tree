<ancor></ancor>
<%= this.DeferRender('submit_button', {}) %>
<%
function LDR(from, to, color)
{
  return linedraw(from.left, from.top, to.left, to.top, color);
}

function linedraw(ax,ay,bx,by,color)
{
  console.log("Linedraw", arguments);
 // Internet downloaded code
  if(ay > by)
  {
    var t = ax;
    ax = bx;
    bx = t;
    
    t = ay;
    ay = by;
    by = t;
  }
  
  var delta = [(bx-ax), (by-ay)];
  var calc = Math.atan(-delta[0]/delta[1]);
  calc = calc * 180 / Math.PI;
  var length = Math.sqrt(delta[0]*delta[0]+delta[1]*delta[1]);
  
  color = color || 'black'
    
  var div = 
    $('<div></div>')
    .addClass('line')
    .css(
    {
      'height' : length + 'px',
      'width' : '1px',
      'background-color' : color,
      'position' : 'absolute',
      'top' :  ay + 'px',
      'left' : ax + 'px',
      'transform' : 'rotate(' + calc + 'deg)',
      '-ms-transform' : 'rotate(' + calc + 'deg)',
      'transform-origin' : '0% 0%',
      '-moz-transform' : 'rotate(' + calc + 'deg)',
      '-moz-transform-origin' : '0% 0%',
      '-webkit-transform' : 'rotate(' + calc + 'deg)',
      '-webkit-transform-origin' : '0% 0%',
      '-o-transform' : 'rotate(' + calc + 'deg)',
      '-o-transform-origin' : '0% 0%'      
    });
  
  __context
    .first()
    .parent()
    .append(div);
  
  return div;
}

mouse = {left: 0, top: 0};
window.line = {};

window.mouse_line = function()
{
  var from = $('#' + window.line.id);

  $('#mouse_line').remove();  
  if (!from.length)
    return;
  
  var desk = this.first().parent().offset();
  var to = mouse;
  to.left -= desk.left - 5;
  to.top -= desk.top - 5;
  
  LDR(from.position(), mouse, 'gray').attr('id', 'mouse_line');
}

document.addEventListener('mousemove', function(e)
{ 
  mouse.left = e.clientX || e.pageX; 
  mouse.top = e.clientY || e.pageY;
  window.mouse_line.apply(__context);
}, false);

this.Defer(function()
{
  for (var x = 0; x < 500; x+=50)
  {
    linedraw(x, 0, x, 500, 'green');
    linedraw(0, x, 500, x, 'green');
  }
debugger;
  this
    .first()
    .parent()
    .click(function(event)
    {
      var tg = event.target;
      if ($(tg).is(':not(div.ui-draggable)'))
        tg = $(this).parents('div').first();
      if ($(tg).is(':not(div.ui-draggable)'))
        return;
      var 
        from = $('#' + window.line.id),
        to = $(tg);
      var line_id = from.attr('id') + '_' + window.line.type;
      $('#' + line_id).remove(); // remove visual link if exsist
      var line = LDR(from.position(), to.position(), window.line.type ? 'red' : 'blue');
      line.attr('id', line_id);
      from.attr('link_' + window.line.type, to.attr('id'));
      window.line.id = undefined;
    });
});
%>